/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef ROODOUBLEGAUSSEXP
#define ROODOUBLEGAUSSEXP

#include "RooAbsPdf.h"
#include "RooRealProxy.h"

class RooDoubleGaussExp : public RooAbsPdf {
public:
  RooDoubleGaussExp() {} ;
  RooDoubleGaussExp(const char *name, const char *title,
	      RooAbsReal& _m,
	      RooAbsReal& _mu,
	      RooAbsReal& _sigma,
	      RooAbsReal& _alphaL,
	      RooAbsReal& _alphaR);
  RooDoubleGaussExp(const RooDoubleGaussExp& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooDoubleGaussExp(*this,newname); }
  inline virtual ~RooDoubleGaussExp() { } 

  virtual Int_t getAnalyticalIntegral( RooArgSet& allVars,  RooArgSet& analVars, const char* rangeName=0 ) const;
  virtual Double_t analyticalIntegral( Int_t code, const char* rangeName=0 ) const;

protected:

  RooRealProxy m ;
  RooRealProxy mu ;
  RooRealProxy sigma ;
  RooRealProxy alphaL ;
  RooRealProxy alphaR ;

  Double_t evaluate() const ;
  Double_t ApproxErf(Double_t arg) const;

private:

  //  ClassDef(RooDoubleGaussExp,1) // Your description goes here...
};


#endif
