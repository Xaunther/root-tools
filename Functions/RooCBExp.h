/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef ROOCBEXP
#define ROOCBEXP

#include "RooAbsPdf.h"
#include "RooRealProxy.h"

class RooCBExp : public RooAbsPdf {
public:
  RooCBExp() {} ;
  RooCBExp(const char *name, const char *title,
	      RooAbsReal& _m,
	      RooAbsReal& _mu,
	      RooAbsReal& _sigma,
	      RooAbsReal& _alphaL,
	      RooAbsReal& _n,
	      RooAbsReal& _alphaR);
  RooCBExp(const RooCBExp& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooCBExp(*this,newname); }
  inline virtual ~RooCBExp() { } 

  virtual Int_t getAnalyticalIntegral( RooArgSet& allVars,  RooArgSet& analVars, const char* rangeName=0 ) const;
  virtual Double_t analyticalIntegral( Int_t code, const char* rangeName=0 ) const;

protected:

  RooRealProxy m ;
  RooRealProxy mu ;
  RooRealProxy sigma ;
  RooRealProxy alphaL ;
  RooRealProxy n ;
  RooRealProxy alphaR ;

  Double_t evaluate() const ;
  Double_t ApproxErf(Double_t arg) const;

private:

  //  ClassDef(RooCBExp,1) // Your description goes here...
};


#endif
